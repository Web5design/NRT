!function(){var e=Handlebars.template,a=Handlebars.templates=Handlebars.templates||{};a["section.hbs"]=e(function(e,a,r,t,i){function n(e,a,t){var i,n,s="";return s+="\n  ",n={hash:{narrative:e},data:a},s+=l((i=r.addSubViewTo||e.addSubViewTo,i?i.call(e,t.thisView,"NarrativeView",n):o.call(e,"addSubViewTo",t.thisView,"NarrativeView",n)))+"\n"}this.compilerInfo=[4,">= 1.0.0"],r=this.merge(r,e.helpers),i=i||{};var s,h="",o=r.helperMissing,l=this.escapeExpression,d=this;return h+="<h1>Section</h1>\n",s=r.each.call(a,a.narratives,{hash:{},inverse:d.noop,fn:d.programWithDepth(1,n,i,a),data:i}),(s||0===s)&&(h+=s),h+='\n<button class="add-narrative">Add Narrative</button>\n'}),a["narrative.hbs"]=e(function(e,a,r,t,i){return this.compilerInfo=[4,">= 1.0.0"],r=this.merge(r,e.helpers),i=i||{},"<h1>Narrative View</h1>\n"})}();

;
// Generated by CoffeeScript 1.6.2
(function() {
  var _base, _base1, _base2, _base3, _base4, _ref, _ref1, _ref2, _ref3,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  (_base = window.Backbone).Models || (_base.Models = {});

  window.Backbone.Models.Narrative = (function(_super) {
    __extends(Narrative, _super);

    function Narrative() {
      _ref = Narrative.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    return Narrative;

  })(Backbone.Model);

  window.Backbone || (window.Backbone = {});

  (_base1 = window.Backbone).Collections || (_base1.Collections = {});

  Backbone.Collections.NarrativeCollection = (function(_super) {
    __extends(NarrativeCollection, _super);

    function NarrativeCollection() {
      _ref1 = NarrativeCollection.__super__.constructor.apply(this, arguments);
      return _ref1;
    }

    NarrativeCollection.prototype.model = Backbone.Models.Narrative;

    return NarrativeCollection;

  })(Backbone.Collection);

  window.Backbone || (window.Backbone = {});

  (_base2 = window.Backbone).Views || (_base2.Views = {});

  Backbone.Views.SectionView = (function(_super) {
    __extends(SectionView, _super);

    function SectionView() {
      this.addNarrative = __bind(this.addNarrative, this);
      this.render = __bind(this.render, this);      _ref2 = SectionView.__super__.constructor.apply(this, arguments);
      return _ref2;
    }

    SectionView.prototype.template = Handlebars.templates['section.hbs'];

    SectionView.prototype.events = {
      "click .add-narrative": "addNarrative"
    };

    SectionView.prototype.initialize = function(options) {
      this.narratives = options.narratives;
      this.narratives.bind('add', this.render);
      return this.render();
    };

    SectionView.prototype.render = function() {
      this.closeSubViews();
      this.$el.html(this.template({
        thisView: this,
        narratives: this.narratives.models
      }));
      this.renderSubViews();
      return this;
    };

    SectionView.prototype.addNarrative = function() {
      var newNarrative;

      newNarrative = new Backbone.Models.Narrative();
      return this.narratives.push(newNarrative);
    };

    SectionView.prototype.onClose = function() {
      return this.closeSubViews();
    };

    return SectionView;

  })(Backbone.Diorama.NestingView);

  window.Backbone || (window.Backbone = {});

  (_base3 = window.Backbone).Views || (_base3.Views = {});

  Backbone.Views.NarrativeView = (function(_super) {
    __extends(NarrativeView, _super);

    function NarrativeView() {
      _ref3 = NarrativeView.__super__.constructor.apply(this, arguments);
      return _ref3;
    }

    NarrativeView.prototype.template = Handlebars.templates['narrative.hbs'];

    NarrativeView.prototype.initialize = function(options) {
      this.narrative = options.narrative;
      return this.render();
    };

    NarrativeView.prototype.render = function() {
      this.$el.html(this.template());
      return this;
    };

    NarrativeView.prototype.onClose = function() {};

    return NarrativeView;

  })(Backbone.View);

  window.Backbone || (window.Backbone = {});

  (_base4 = window.Backbone).Controllers || (_base4.Controllers = {});

  Backbone.Controllers.ReportsController = (function(_super) {
    __extends(ReportsController, _super);

    function ReportsController() {
      var narratives, sectionView;

      this.mainRegion = new Backbone.Diorama.ManagedRegion();
      $('body').append(this.mainRegion.$el);
      narratives = new Backbone.Collections.NarrativeCollection();
      sectionView = new Backbone.Views.SectionView({
        narratives: narratives
      });
      this.mainRegion.showView(sectionView);
    }

    return ReportsController;

  })(Backbone.Diorama.Controller);

}).call(this);
